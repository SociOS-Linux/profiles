{"version":3,"file":"agent-avatar.js","sourceRoot":"","sources":["../../src/elements/agent-avatar.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,eAAe,EAAE,MAAM,6BAA6B,CAAC;AAC9D,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,oBAAoB,EAAE,MAAM,YAAY,CAAC;AAElD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AACjE,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,MAAM,OAAO,WAAY,SAAQ,mBAAmB,CAAC,UAAU,CAAC;IAAhE;QACE,wBAAwB;;QAWxB;;WAEG;QAEH,SAAI,GAAG,EAAE,CAAC;QAYF,aAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,WAChD,OAAA,MAAA,IAAI,CAAC,KAAK,0CAAE,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA,EAAA,CACxC,CAAC;IAyCJ,CAAC;IAvCC,KAAK,CAAC,YAAY;QAChB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,KAAK,QAAQ,EAAE;YAC7C,MAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACtD;IACH,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,KAAK,WAAW;YAC9C,OAAO,IAAI,CAAA;gBACD,IAAI,CAAC,WAAW;gBAChB,IAAI,CAAC,IAAI;yBACA,CAAC;QACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK;YACrB,OAAO,IAAI,CAAA;;mBAEE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM;2BACzB,IAAI,CAAC,IAAI;;;;OAI7B,CAAC;QACJ,OAAO,IAAI,CAAA;;uBAEQ,IAAI,CAAC,IAAI,cAAc,IAAI,CAAC,IAAI;oBACnC,CAAC;IACnB,CAAC;IAED;;OAEG;IACH,MAAM,KAAK,cAAc;QACvB,OAAO;YACL,gBAAgB,EAAE,aAAa;YAC/B,WAAW,EAAE,QAAQ;YACrB,aAAa,EAAE,UAAU;SAC1B,CAAC;IACJ,CAAC;;AAEM,kBAAM,GAAG,CAAC,YAAY,CAAC,CAAC;AA5D/B;IAJC,QAAQ,CAAC;QACR,SAAS,EAAE,eAAe;QAC1B,IAAI,EAAE,MAAM;KACb,CAAC;gDAC2B;AAM7B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yCACjB;AAUV;IAFC,eAAe,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC;IAClD,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;0CACL","sourcesContent":["import { AgentPubKeyB64 } from '@holochain-open-dev/core-types';\nimport { contextProvided } from '@holochain-open-dev/context';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { profilesStoreContext } from '../context';\nimport { ProfilesStore } from '../profiles-store';\nimport { HoloIdenticon } from './holo-identicon';\nimport { SlAvatar, SlSkeleton } from '@scoped-elements/shoelace';\nimport { StoreSubscriber } from 'lit-svelte-stores';\nimport { sharedStyles } from './utils/shared-styles';\n\nexport class AgentAvatar extends ScopedElementsMixin(LitElement) {\n  /** Public properties */\n\n  /**\n   * REQUIRED. The public key identifying the agent whose profile is going to be shown.\n   */\n  @property({\n    attribute: 'agent-pub-key',\n    type: String,\n  })\n  agentPubKey!: AgentPubKeyB64;\n\n  /**\n   * Size of the avatar image in pixels.\n   */\n  @property({ type: Number })\n  size = 32;\n\n  /** Dependencies */\n\n  /**\n   * `ProfilesStore` that is requested via context.\n   * Only set this property if you want to override the store requested via context.\n   */\n  @contextProvided({ context: profilesStoreContext })\n  @property({ type: Object })\n  store!: ProfilesStore;\n\n  private _profile = new StoreSubscriber(this, () =>\n    this.store?.profileOf(this.agentPubKey)\n  );\n\n  async firstUpdated() {\n    if (this.store.config.avatarMode === 'avatar') {\n      await this.store.fetchAgentProfile(this.agentPubKey);\n    }\n  }\n\n  render() {\n    if (this.store.config.avatarMode === 'identicon')\n      return html`<holo-identicon\n        .hash=${this.agentPubKey}\n        .size=${this.size}\n      ></holo-identicon>`;\n    if (this._profile.value)\n      return html`\n        <sl-avatar\n          .image=${this._profile.value.fields.avatar}\n          style=\"--size: ${this.size}px;\"\n        >\n          <div slot=\"icon\"></div>\n        </sl-avatar>\n      `;\n    return html`<sl-skeleton\n      effect=\"pulse\"\n      style=\"height: ${this.size}px; width: ${this.size}px\"\n    ></sl-skeleton>`;\n  }\n\n  /**\n   * @ignore\n   */\n  static get scopedElements() {\n    return {\n      'holo-identicon': HoloIdenticon,\n      'sl-avatar': SlAvatar,\n      'sl-skeleton': SlSkeleton,\n    };\n  }\n\n  static styles = [sharedStyles];\n}\n"]}