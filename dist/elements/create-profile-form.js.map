{"version":3,"file":"create-profile-form.js","sourceRoot":"","sources":["../../src/elements/create-profile-form.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from 'lit';\nimport { query, property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { requestContext } from '@holochain-open-dev/context';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { MobxLitElement } from '@adobe/lit-mobx';\n\nimport { TextField } from 'scoped-material-components/mwc-textfield';\nimport { Button } from 'scoped-material-components/mwc-button';\nimport { Card } from 'scoped-material-components/mwc-card';\nimport { Ripple } from 'scoped-material-components/mwc-ripple';\nimport { Icon } from 'scoped-material-components/mwc-icon';\n\nimport { sharedStyles } from './utils/shared-styles';\nimport { Dictionary, PROFILES_STORE_CONTEXT } from '../types';\nimport { ProfilesStore } from '../profiles.store';\n\n/**\n * @element create-profile-form\n * @fires profile-created - after the profile has been created\n */\nexport class CreateProfileForm extends ScopedElementsMixin(MobxLitElement) {\n  /** Public attributes */\n\n  /**\n   * Minimum length that the nickname needs to have\n   * @attr min-length\n   */\n  @property({ type: Number, attribute: 'min-length' })\n  minLength = 3;\n\n  /** Private properties */\n\n  @query('#nickname-field')\n  _nicknameField!: TextField;\n\n  _existingUsernames: { [key: string]: boolean } = {};\n\n  @requestContext(PROFILES_STORE_CONTEXT)\n  _store!: ProfilesStore;\n\n  firstUpdated() {\n    this._nicknameField.validityTransform = (newValue: string) => {\n      this.requestUpdate();\n      if (newValue.length < this.minLength) {\n        this._nicknameField.setCustomValidity(\n          `Username is too shot, min. ${this.minLength} characters`\n        );\n        return {\n          valid: false,\n        };\n      } else if (this._existingUsernames[newValue]) {\n        this._nicknameField.setCustomValidity('This nickname already exists');\n        return { valid: false };\n      }\n\n      return {\n        valid: true,\n      };\n    };\n  }\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  async createProfile() {\n    const nickname = this._nicknameField.value;\n\n    try {\n      const fields: Dictionary<string> = {};\n\n      await this._store.createProfile({\n        nickname,\n        fields,\n      });\n\n      this.dispatchEvent(\n        new CustomEvent('profile-created', {\n          detail: {\n            profile: {\n              nickname,\n              fields,\n            },\n          },\n          bubbles: true,\n          composed: true,\n        })\n      );\n    } catch (e) {\n      this._existingUsernames[nickname] = true;\n      this._nicknameField.reportValidity();\n    }\n  }\n\n  render() {\n    return html`\n      <mwc-card style=\"width: auto\">\n        <div class=\"column\" style=\"margin: 16px;\">\n          <span class=\"title\" style=\"margin-bottom: 24px;\">Create Profile</span>\n          <div class=\"row center-content\">\n            <mwc-textfield\n              id=\"nickname-field\"\n              outlined\n              label=\"Nickname\"\n              @input=${() => this._nicknameField.reportValidity()}\n              style=\"margin-left: 8px;\"\n            ></mwc-textfield>\n          </div>\n          <mwc-button\n            id=\"create-profile-button\"\n            raised\n            class=${classMap({\n              'small-margin': !!this._nicknameField,\n              'big-margin': !this._nicknameField,\n            })}\n            .disabled=${!this._nicknameField ||\n            !this._nicknameField.validity.valid}\n            label=\"CREATE PROFILE\"\n            @click=${() => this.createProfile()}\n          ></mwc-button>\n        </div>\n      </mwc-card>\n    `;\n  }\n\n  static get scopedElements() {\n    return {\n      'mwc-textfield': TextField,\n      'mwc-button': Button,\n      'mwc-icon': Icon,\n      'mwc-card': Card,\n      'mwc-ripple': Ripple,\n    };\n  }\n}\n"]}