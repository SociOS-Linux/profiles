{"version":3,"file":"create-profile-form.js","sourceRoot":"","sources":["../../src/elements/create-profile-form.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit';\nimport { query, property, state } from 'lit/decorators.js';\nimport { contextProvided } from '@lit-labs/context';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { Dictionary } from '@holochain-open-dev/core-types';\nimport {\n  TextField,\n  Button,\n  Card,\n  IconButton,\n  Fab,\n} from '@scoped-elements/material-web';\nimport { lightTheme, SlAvatar } from '@scoped-elements/shoelace';\n\nimport { sharedStyles } from './utils/shared-styles';\nimport { ProfilesStore } from '../profiles-store';\nimport { profilesStoreContext } from '../context';\n\n/**\n * @element create-profile-form\n * @fires profile-created - after the profile has been created\n */\nexport class CreateProfileForm extends ScopedElementsMixin(LitElement) {\n  /** Public attributes */\n\n  /**\n   * Minimum length that the nickname needs to have\n   * @attr min-length\n   */\n  @property({ type: Number, attribute: 'min-length' })\n  minLength = 3;\n\n  /** Dependencies */\n\n  @contextProvided({ context: profilesStoreContext })\n  _store!: ProfilesStore;\n\n  /** Private properties */\n\n  @query('#nickname-field')\n  _nicknameField!: TextField;\n\n  _existingUsernames: { [key: string]: boolean } = {};\n\n  @query('#avatar-file-picker')\n  _avatarFilePicker!: HTMLInputElement;\n\n  @state()\n  _avatar: string | undefined = undefined;\n\n  firstUpdated() {\n    this._nicknameField.validityTransform = (newValue: string) => {\n      this.requestUpdate();\n      if (newValue.length < this.minLength) {\n        this._nicknameField.setCustomValidity(`Username is too short`);\n        return {\n          valid: false,\n        };\n      } else if (this._existingUsernames[newValue]) {\n        this._nicknameField.setCustomValidity('This nickname already exists');\n        return { valid: false };\n      }\n\n      return {\n        valid: true,\n      };\n    };\n  }\n\n  async createProfile() {\n    const nickname = this._nicknameField.value;\n\n    try {\n      const fields: Dictionary<string> = {};\n      if (this._avatar) {\n        fields['avatar'] = this._avatar;\n      }\n      await this._store.createProfile({\n        nickname,\n        fields,\n      });\n\n      this.dispatchEvent(\n        new CustomEvent('profile-created', {\n          detail: {\n            profile: {\n              nickname,\n              fields,\n            },\n          },\n          bubbles: true,\n          composed: true,\n        })\n      );\n    } catch (e) {\n      this._existingUsernames[nickname] = true;\n      this._nicknameField.reportValidity();\n    }\n  }\n\n  // Crop the image and return a base64 bytes string of its content\n  resizeAndExport(img: HTMLImageElement) {\n    const MAX_WIDTH = 300;\n    const MAX_HEIGHT = 300;\n\n    let width = img.width;\n    let height = img.height;\n\n    // Change the resizing logic\n    if (width > height) {\n      if (width > MAX_WIDTH) {\n        height = height * (MAX_WIDTH / width);\n        width = MAX_WIDTH;\n      }\n    } else {\n      if (height > MAX_HEIGHT) {\n        width = width * (MAX_HEIGHT / height);\n        height = MAX_HEIGHT;\n      }\n    }\n\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    ctx.drawImage(img, 0, 0, width, height);\n\n    // return the .toDataURL of the temp canvas\n    return canvas.toDataURL();\n  }\n\n  onAvatarUploaded() {\n    if (this._avatarFilePicker.files && this._avatarFilePicker.files[0]) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.onload = () => {\n          this._avatar = this.resizeAndExport(img);\n          this._avatarFilePicker.value = '';\n        };\n        img.src = e.target?.result as string;\n      };\n      reader.readAsDataURL(this._avatarFilePicker.files[0]);\n    }\n  }\n\n  avatarMode() {\n    return this._store.config.avatarMode === 'avatar';\n  }\n\n  renderAvatar() {\n    if (!this.avatarMode()) return html``;\n    if (this._avatar) {\n      return html`\n        <div class=\"column\" style=\"align-items: center; \">\n          <sl-avatar\n            image=\"${this._avatar}\"\n            alt=\"Avatar\"\n            style=\"margin-bottom: 4px; --size: 3.5rem;\"\n            initials=\"\"\n          ></sl-avatar>\n          <span\n            class=\"placeholder label\"\n            style=\"cursor: pointer;   text-decoration: underline;\"\n            @click=${() => (this._avatar = undefined)}\n            >Clear</span\n          >\n        </div>\n      `;\n    }\n    return html`\n      <div class=\"column\" style=\"align-items: center;\">\n        <mwc-fab\n          icon=\"add\"\n          @click=${() => this._avatarFilePicker.click()}\n          style=\"margin-bottom: 4px;\"\n        ></mwc-fab>\n        <span class=\"placeholder label\">Avatar</span>\n      </div>\n    `;\n  }\n\n  shouldCreateButtonBeEnabled() {\n    if (!this._nicknameField) return false;\n    if (!this._nicknameField.validity.valid) return false;\n    if (this.avatarMode() && !this._avatar) return false;\n    return true;\n  }\n\n  render() {\n    return html`\n      ${this.avatarMode()\n        ? html`<input\n            type=\"file\"\n            id=\"avatar-file-picker\"\n            style=\"display: none;\"\n            @change=${this.onAvatarUploaded}\n          />`\n        : html``}\n      <mwc-card style=\"width: auto\">\n        <div class=\"column\" style=\"margin: 16px;\">\n          <span class=\"title\" style=\"margin-bottom: 24px;\">Create Profile</span>\n          <div class=\"row\">\n            <div\n              style=\"width: 80px; height: 80px; justify-content: center;\"\n              class=\"row\"\n            >\n              ${this.renderAvatar()}\n            </div>\n\n            <mwc-textfield\n              id=\"nickname-field\"\n              outlined\n              label=\"Nickname\"\n              .helper=${`Min. ${this.minLength} characters`}\n              @input=${() => this._nicknameField.reportValidity()}\n              style=\"margin-left: 8px;\"\n            ></mwc-textfield>\n          </div>\n          <mwc-button\n            id=\"create-profile-button\"\n            raised\n            style=\"margin-top: 16px;\"\n            .disabled=${!this.shouldCreateButtonBeEnabled()}\n            label=\"CREATE PROFILE\"\n            @click=${() => this.createProfile()}\n          ></mwc-button>\n        </div>\n      </mwc-card>\n    `;\n  }\n\n  static get scopedElements() {\n    return {\n      'mwc-textfield': TextField,\n      'mwc-button': Button,\n      'mwc-card': Card,\n      'mwc-icon-button': IconButton,\n      'mwc-fab': Fab,\n      'sl-avatar': SlAvatar,\n    };\n  }\n\n  static get styles() {\n    return [sharedStyles, lightTheme];\n  }\n}\n"]}