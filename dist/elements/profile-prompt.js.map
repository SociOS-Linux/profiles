{"version":3,"file":"profile-prompt.js","sourceRoot":"","sources":["../../src/elements/profile-prompt.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAEpD,OAAO,EACL,MAAM,EACN,gBAAgB,EAChB,SAAS,GACV,MAAM,+BAA+B,CAAC;AACvC,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,eAAe,EAAE,MAAM,6BAA6B,CAAC;AAC9D,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAEjD,OAAO,EAAE,oBAAoB,EAAE,MAAM,YAAY,CAAC;AAElD;;;GAGG;AACH,MAAM,OAAO,aAAc,SAAQ,mBAAmB,CAAC,UAAU,CAAC;IAAlE;QACE,wBAAwB;;QAYxB,yBAAyB;QAGjB,aAAQ,GAAG,IAAI,CAAC;QAEhB,eAAU,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,WAAC,OAAA,MAAA,IAAI,CAAC,KAAK,0CAAE,SAAS,CAAA,EAAA,CAAC,CAAC;IAmD9E,CAAC;IAjDC,KAAK,CAAC,YAAY;QAChB,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAA;;;;QAIP,IAAI,CAAC,QAAQ;YACb,CAAC,CAAC,IAAI,CAAA,+DAA+D;YACrE,CAAC,CAAC,IAAI,CAAA;;;iBAGG;WACN,CAAC;IACV,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;QACP,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK;YACvC,CAAC,CAAC,IAAI,CAAA,eAAe;YACrB,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE;KACxB,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,KAAK,cAAc;QACvB,OAAO;YACL,eAAe,EAAE,SAAS;YAC1B,YAAY,EAAE,MAAM;YACpB,uBAAuB,EAAE,gBAAgB;YACzC,gBAAgB,EAAE,aAAa;SAChC,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO;YACL,YAAY;YACZ,GAAG,CAAA;;;;OAIF;SACF,CAAC;IACJ,CAAC;CACF;AA1DC;IAFC,eAAe,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC;IAClD,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;4CACL;AAKtB;IADC,KAAK,EAAE;+CACgB","sourcesContent":["import { css, html, LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\n\nimport {\n  Button,\n  CircularProgress,\n  TextField,\n} from '@scoped-elements/material-web';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { contextProvided } from '@holochain-open-dev/context';\nimport { StoreSubscriber } from 'lit-svelte-stores';\n\nimport { sharedStyles } from './utils/shared-styles';\nimport { CreateProfile } from './create-profile';\nimport { ProfilesStore } from '../profiles-store';\nimport { profilesStoreContext } from '../context';\n\n/**\n * @element profile-prompt\n * @slot hero - Will be displayed above the create-profile form when the user is prompted with it\n */\nexport class ProfilePrompt extends ScopedElementsMixin(LitElement) {\n  /** Public attributes */\n\n  /** Dependencies */\n\n  /**\n   * `ProfilesStore` that is requested via context.\n   * Only set this property if you want to override the store requested via context.\n   */\n  @contextProvided({ context: profilesStoreContext })\n  @property({ type: Object })\n  store!: ProfilesStore;\n\n  /** Private properties */\n\n  @state()\n  private _loading = true;\n\n  private _myProfile = new StoreSubscriber(this, () => this.store?.myProfile);\n\n  async firstUpdated() {\n    await this.store.fetchMyProfile();\n    this._loading = false;\n  }\n\n  renderPrompt() {\n    return html` <div\n      class=\"column\"\n      style=\"align-items: center; justify-content: center; flex: 1;\"\n    >\n      ${this._loading\n        ? html`<mwc-circular-progress indeterminate></mwc-circular-progress>`\n        : html` <div class=\"column\" style=\"align-items: center;\">\n            <slot name=\"hero\"></slot>\n            <create-profile></create-profile>\n          </div>`}\n    </div>`;\n  }\n\n  render() {\n    return html`\n      ${!this._loading && this._myProfile.value\n        ? html`<slot></slot>`\n        : this.renderPrompt()}\n    `;\n  }\n\n  /**\n   * @ignore\n   */\n  static get scopedElements() {\n    return {\n      'mwc-textfield': TextField,\n      'mwc-button': Button,\n      'mwc-circular-progress': CircularProgress,\n      'create-profile': CreateProfile,\n    };\n  }\n\n  static get styles() {\n    return [\n      sharedStyles,\n      css`\n        :host {\n          display: flex;\n        }\n      `,\n    ];\n  }\n}\n"]}