{"version":3,"file":"search-agent.js","sourceRoot":"","sources":["../../src/elements/search-agent.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, LitElement } from 'lit';\nimport { property, state, query } from 'lit/decorators.js';\n\nimport {\n  MenuSurface,\n  List,\n  ListItem,\n  TextField,\n} from '@scoped-elements/material-web';\nimport { contextProvided } from '@lit-labs/context';\nimport { StoreSubscriber } from 'lit-svelte-stores';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\n\nimport { AgentProfile } from '../types';\nimport { sharedStyles } from './utils/shared-styles';\nimport { ProfilesStore } from '../profiles-store';\nimport { HoloIdenticon } from './holo-identicon';\nimport { profilesStoreContext } from '../context';\n\n/**\n * @element search-agent\n * @fires agent-selected - Fired when the user selects some agent. `event.detail.agent` will contain the agent selected\n */\nexport class SearchAgent extends ScopedElementsMixin(LitElement) {\n  /** Public attributes */\n\n  /**\n   * Whether to clear the field when an agent is selected\n   * @attr clear-on-select\n   */\n  @property({ type: Boolean, attribute: 'clear-on-select' })\n  clearOnSelect = false;\n\n  /**\n   * Whether to include my own agent as a possible agent to select\n   * @attr include-myself\n   */\n  @property({ type: Boolean, attribute: 'include-myself' })\n  includeMyself = false;\n\n  /**\n   * Label for the agent searching field\n   * @attr field-label\n   */\n  @property({ type: String, attribute: 'field-label' })\n  fieldLabel = 'Search agent';\n\n  /** Dependencies */\n\n  @contextProvided({ context: profilesStoreContext })\n  _store!: ProfilesStore;\n\n  /** Private properties */\n\n  _knownProfiles = new StoreSubscriber(this, () => this._store.knownProfiles);\n\n  get _filteredAgents(): Array<AgentProfile> {\n    let filtered = Object.entries(this._knownProfiles.value)\n      .filter(([agentPubKey, profile]) =>\n        profile.nickname.startsWith(this._currentFilter as string)\n      )\n      .map(([agent_pub_key, profile]) => ({ agent_pub_key, profile }));\n    if (!this.includeMyself) {\n      filtered = filtered.filter(\n        agent => this._store.myAgentPubKey !== agent.agent_pub_key\n      );\n    }\n\n    return filtered;\n  }\n\n  @state()\n  _currentFilter: string | undefined = undefined;\n\n  _lastSearchedPrefix: string | undefined = undefined;\n\n  @query('#textfield')\n  _textField!: TextField;\n  @query('#overlay')\n  _overlay!: MenuSurface;\n\n  firstUpdated() {\n    this.addEventListener('blur', () => this._overlay.close());\n  }\n\n  async searchAgents(nicknamePrefix: string): Promise<void> {\n    this._lastSearchedPrefix = nicknamePrefix;\n    await this._store.searchProfiles(nicknamePrefix);\n  }\n\n  onFilterChange() {\n    if (this._textField.value.length < 3) return;\n\n    this._overlay.show();\n\n    this._currentFilter = this._textField.value;\n\n    const filterPrefix = this._currentFilter.slice(0, 3);\n    if (filterPrefix !== this._lastSearchedPrefix) {\n      this.searchAgents(filterPrefix);\n    }\n  }\n\n  onUsernameSelected(agent: AgentProfile) {\n    // If nickname matches agent, user has selected it\n    if (agent) {\n      this.dispatchEvent(\n        new CustomEvent('agent-selected', {\n          detail: {\n            agent,\n          },\n        })\n      );\n\n      // If the consumer says so, clear the field\n      if (this.clearOnSelect) {\n        this._textField.value = '';\n        this._currentFilter = undefined;\n      } else {\n        this._textField.value = agent.profile.nickname;\n      }\n      this._overlay.close();\n    }\n  }\n\n  render() {\n    return html`\n      <div style=\"position: relative; flex: 1; display: flex;\">\n        <mwc-textfield\n          id=\"textfield\"\n          style=\"flex: 1;\"\n          class=\"input\"\n          .label=${this.fieldLabel}\n          placeholder=\"At least 3 chars...\"\n          outlined\n          @input=${() => this.onFilterChange()}\n          @focus=${() => this._currentFilter && this._overlay.show()}\n        >\n        </mwc-textfield>\n        <mwc-menu-surface absolute id=\"overlay\" x=\"4\" y=\"28\">\n          ${this._filteredAgents.length > 0\n            ? this._filteredAgents.map(\n                agent => html`\n                  <mwc-list style=\"min-width: 80px;\">\n                    <mwc-list-item\n                      graphic=\"avatar\"\n                      .value=${agent.agent_pub_key}\n                      style=\"--mdc-list-item-graphic-size: 32px;\"\n                      @request-selected=${() => this.onUsernameSelected(agent)}\n                    >\n                      <agent-avatar\n                        slot=\"graphic\"\n                        .agentPubKey=${agent.agent_pub_key}\n                      ></agent-avatar>\n                      <span style=\"margin-left: 8px;\"\n                        >${agent.profile.nickname}</span\n                      >\n                    </mwc-list-item>\n                  </mwc-list>\n                `\n              )\n            : html`<mwc-list-item>No agents match the filter</mwc-list-item>`}\n        </mwc-menu-surface>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return [\n      sharedStyles,\n      css`\n        :host {\n          display: flex;\n        }\n        #list {\n          margin-top: 16px;\n          margin-left: 16px;\n        }\n      `,\n    ];\n  }\n\n  static get scopedElements() {\n    return {\n      'holo-identicon': HoloIdenticon,\n      'mwc-textfield': TextField,\n      'mwc-menu-surface': MenuSurface,\n      'mwc-list': List,\n      'mwc-list-item': ListItem,\n    };\n  }\n}\n"]}